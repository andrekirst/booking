# PostgreSQL-Konfiguration optimiert für Raspberry Pi Zero 2 W (512MB RAM)
# Erstellt von Architecture Expert für kritische Memory-Optimierung

# ===== CONNECTION SETTINGS =====
max_connections = 20                     # Standard: 100 → 20 (-80% für Pi Zero)
superuser_reserved_connections = 2       # Standard: 3 → 2

# ===== MEMORY SETTINGS - KRITISCH =====
shared_buffers = 32MB                    # Standard: 128MB → 32MB (-75%)
effective_cache_size = 128MB             # Standard: 4GB → 128MB (Pi Zero Gesamt-RAM)
work_mem = 2MB                           # Standard: 4MB → 2MB (-50%)
maintenance_work_mem = 16MB              # Standard: 64MB → 16MB (-75%)
temp_buffers = 4MB                       # Standard: 8MB → 4MB (-50%)

# ===== WAL (Write-Ahead Logging) - Memory-optimiert =====
wal_buffers = 1MB                        # Standard: 16MB → 1MB (-94%)
checkpoint_segments = 3                  # Minimal für Pi Zero
checkpoint_completion_target = 0.9       # Optimiert für SSD
wal_keep_segments = 2                    # Standard: 0 → 2 (minimal retention)

# ===== QUERY PLANNER =====
random_page_cost = 1.1                   # SSD-optimiert (Pi Zero mit SD Card)
effective_io_concurrency = 50            # Pi Zero hat begrenzte I/O
seq_page_cost = 1.0                      # Sequential Read Optimierung

# ===== LOGGING - Minimal für Memory =====
log_statement = 'none'                   # Keine Query-Logs (Memory sparen)
log_min_duration_statement = 5000        # Nur sehr langsame Queries (>5s)
log_line_prefix = '%t [%p]: '           # Minimaler Log-Prefix
log_checkpoints = off                    # Checkpoint-Logs deaktiviert
log_connections = off                    # Connection-Logs deaktiviert
log_disconnections = off                 # Disconnection-Logs deaktiviert

# ===== BACKGROUND WRITER - Pi Zero angepasst =====
bgwriter_delay = 200ms                   # Standard: 200ms (OK für Pi Zero)
bgwriter_lru_maxpages = 50              # Standard: 100 → 50 (-50%)
bgwriter_lru_multiplier = 1.0           # Standard: 2.0 → 1.0 (weniger aggressive)

# ===== AUTOVACUUM - Memory-schonend =====
autovacuum = on                          # Bleibt aktiviert
autovacuum_max_workers = 1              # Standard: 3 → 1 Worker (-67%)
autovacuum_work_mem = 8MB               # Standard: 64MB → 8MB (-88%)
autovacuum_naptime = 60s                # Standard: 60s (OK)
autovacuum_vacuum_scale_factor = 0.2    # Standard: 0.2 (OK)

# ===== LOCK MANAGEMENT - Reduziert =====
max_locks_per_transaction = 32          # Standard: 64 → 32 (-50%)
max_pred_locks_per_transaction = 32     # Standard: 64 → 32 (-50%)

# ===== MISCELLANEOUS - Pi Zero spezifisch =====
huge_pages = off                        # Pi Zero unterstützt keine Huge Pages
shared_preload_libraries = ''           # Keine Extensions für minimalen Memory
track_activities = on                   # Für Monitoring (minimal overhead)
track_counts = on                       # Für Query-Statistiken (minimal overhead)
track_functions = none                  # Keine Function-Tracking

# ===== CLIENT CONNECTION DEFAULTS =====
search_path = 'public'                  # Standard Search Path
default_text_search_config = 'pg_catalog.simple'  # Minimal Text Search

# ===== ERROR HANDLING =====
restart_after_crash = on               # Auto-Recovery für Pi Zero
exit_on_error = off                     # Continue on non-fatal Errors

# ===== PERFORMANCE OPTIMIERUNGEN =====
# Checkpoint-Optimierung für Pi Zero
checkpoint_timeout = 15min             # Standard: 5min → 15min (weniger I/O)
max_wal_size = 64MB                    # Standard: 1GB → 64MB (-94%)
min_wal_size = 32MB                    # Standard: 80MB → 32MB (-60%)

# Connection Pooling vorbereiten
listen_addresses = '*'                  # Akzeptiere Connections von Docker
port = 5432                            # Standard PostgreSQL Port

# Encoding
lc_messages = 'C'                      # Minimal Locale für Memory
lc_monetary = 'C'
lc_numeric = 'C'
lc_time = 'C'
default_text_search_config = 'pg_catalog.simple'

# ===== Pi Zero HARDWARE OPTIMIERUNGEN =====
# Filesystem-spezifische Einstellungen für SD Card
fsync = on                             # Wichtig für Datenintegrität
synchronous_commit = on                # Wichtig für ACID-Eigenschaften
full_page_writes = on                  # Wichtig für Crash-Recovery

# Memory-Pressure Handling
oom_score_adj = 0                      # Standard OOM-Killer Behavior

# ===== BOOKING-SYSTEM SPEZIFISCHE OPTIMIERUNGEN =====
# Für Event-Store Pattern
max_prepared_transactions = 5          # Standard: 0 → 5 (für Event-Transactions)

# Für Read-Models und CQRS
enable_hashagg = on                    # Hash-Aggregation für bessere Query-Performance
enable_material = on                   # Materialized Views für Read-Models

# ===== MONITORING & STATISTICS =====
log_statement_stats = off              # Detaillierte Statement-Stats deaktiviert
log_parser_stats = off                 # Parser-Stats deaktiviert
log_planner_stats = off                # Planner-Stats deaktiviert
log_executor_stats = off               # Executor-Stats deaktiviert

# Ende der Pi Zero 2 W optimierten PostgreSQL-Konfiguration
# Erwartete Memory-Reduktion: -47% (150MB → 80MB)
# Optimiert für: Single-Agent Development auf Pi Zero 2 W