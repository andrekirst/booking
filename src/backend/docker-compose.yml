services:
  postgres:
    image: postgres:16-alpine
    container_name: booking-postgres
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_DB: booking_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user -d booking_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - booking-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=booking_dev;Username=booking_user;Password=booking_password"
      JwtSettings__Secret: "super-secret-key-for-development-only-min-256-bits-long-jwt-token-generation"
    ports:
      - "5000:80"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - booking-network
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: .
          ignore:
            - bin/
            - obj/

volumes:
  postgres_data:

networks:
  booking-network:
    driver: bridge