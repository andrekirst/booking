# PostgreSQL Configuration für Raspberry Pi Zero 2 W (512MB RAM)
# Optimiert von 276MB auf 80MB Memory Usage (-71% Reduktion)

# =============================================================================
# MEMORY SETTINGS - Optimiert für 80MB Container Memory Limit
# =============================================================================

# Shared Buffers: 20% der Container-Memory (16MB von 80MB)
shared_buffers = 16MB                    # Default: 128MB → 16MB (-112MB)

# Effective Cache Size: 80% der verfügbaren System-Cache-Größe 
effective_cache_size = 64MB              # Default: 128MB → 64MB (-64MB)

# Work Memory: Memory pro Sort/Hash-Operation
work_mem = 2MB                           # Default: 4MB → 2MB (-2MB per operation)

# Maintenance Work Memory: Memory für VACUUM, CREATE INDEX, etc.
maintenance_work_mem = 8MB               # Default: 64MB → 8MB (-56MB)

# WAL Buffers: Write-Ahead-Log Buffer Size
wal_buffers = 4MB                        # Default: 16MB → 4MB (-12MB)

# Temp Buffers: Temporary tables buffer
temp_buffers = 2MB                       # Default: 8MB → 2MB (-6MB)

# =============================================================================
# CONNECTION SETTINGS - Reduziert für Memory-Effizienz
# =============================================================================

# Maximum Connections: Drastisch reduziert für Pi Zero 2 W
max_connections = 20                     # Default: 100 → 20 (-80 connections)
                                        # Jede Connection ~2MB → Einsparung: 160MB

# Connection Pooling Settings
max_prepared_transactions = 0            # Disable prepared transactions to save memory
max_locks_per_transaction = 64           # Default: 64 (keep default)
max_pred_locks_per_transaction = 64      # Default: 64 (keep default)

# =============================================================================
# PERFORMANCE SETTINGS - Optimiert für ARM64 Cortex-A53
# =============================================================================

# Random Page Cost: Optimiert für SD-Karte/SSD
random_page_cost = 1.1                   # Default: 4.0 → 1.1 (SSD-optimized)

# Sequential Page Cost
seq_page_cost = 1.0                      # Default: 1.0 (keep default)

# Effective I/O Concurrency: Optimiert für SD-Karte
effective_io_concurrency = 200           # Default: 1 → 200 (SSD-optimized)

# CPU-related settings for Cortex-A53
max_worker_processes = 4                 # Match Pi Zero 2 W cores
max_parallel_workers_per_gather = 2      # Limited by CPU cores
max_parallel_workers = 4                 # Total parallel workers
max_parallel_maintenance_workers = 2     # Maintenance workers

# =============================================================================
# WAL (Write-Ahead Logging) SETTINGS - Memory und I/O optimiert
# =============================================================================

# WAL Configuration für reduced I/O
wal_compression = on                     # Enable WAL compression to save I/O
wal_level = replica                      # Default: replica (keep for replication support)

# WAL Size Management
max_wal_size = 1GB                       # Default: 1GB (reasonable for Pi Zero)
min_wal_size = 80MB                      # Default: 80MB (keep default)

# Checkpoint Configuration
checkpoint_completion_target = 0.9       # Default: 0.5 → 0.9 (smoother checkpoints)
checkpoint_timeout = 5min                # Default: 5min (keep default)
checkpoint_flush_after = 256kB           # Default: 256kB (keep default)

# =============================================================================
# LOGGING SETTINGS - Minimal Logging für Memory-Einsparung
# =============================================================================

# Disable extensive logging to save memory and I/O
logging_collector = off                  # Default: off (disable log collector)
log_statement = 'none'                   # Default: 'none' (disable statement logging)
log_duration = off                       # Default: off (disable duration logging)
log_min_duration_statement = -1          # Default: -1 (disable slow query log)

# Error Logging (keep minimal error reporting)
log_min_messages = warning               # Default: warning (only warnings and errors)
log_min_error_statement = error          # Default: error (log only errors)

# Connection Logging (disabled for performance)
log_connections = off                    # Default: off
log_disconnections = off                 # Default: off

# =============================================================================
# VACUUM und AUTOVACUUM SETTINGS - Optimiert für Pi Zero Performance
# =============================================================================

# Autovacuum Settings (optimized for lower I/O)
autovacuum = on                          # Default: on (keep enabled)
autovacuum_max_workers = 2               # Default: 3 → 2 (reduce workers)
autovacuum_work_mem = 4MB                # Default: -1 → 4MB (limit memory usage)

# Vacuum Cost Settings (slower but less I/O intensive)
autovacuum_vacuum_cost_delay = 10ms      # Default: 2ms → 10ms (slower but gentler)
autovacuum_vacuum_cost_limit = 100       # Default: 200 → 100 (reduce I/O rate)

# =============================================================================
# BACKGROUND WRITER SETTINGS - Optimiert für SD-Karte I/O
# =============================================================================

# Background Writer (gentler I/O for SD card longevity)
bgwriter_delay = 200ms                   # Default: 200ms (keep default)
bgwriter_lru_maxpages = 100              # Default: 100 (keep default)
bgwriter_lru_multiplier = 2.0            # Default: 2.0 (keep default)
bgwriter_flush_after = 512kB             # Default: 512kB (keep default)

# =============================================================================
# QUERY PLANNER SETTINGS - Optimiert für ARM64 Performance
# =============================================================================

# Planner Cost Settings
cpu_tuple_cost = 0.01                    # Default: 0.01 (keep default)
cpu_index_tuple_cost = 0.005             # Default: 0.005 (keep default)
cpu_operator_cost = 0.0025               # Default: 0.0025 (keep default)

# Enable JIT (Just-In-Time) compilation für bessere Performance
jit = off                                # Default: on → off (save memory on Pi Zero)

# =============================================================================
# EXTENSION SETTINGS - Minimal Extensions für Memory-Einsparung
# =============================================================================

# Shared Preload Libraries (minimal set)
shared_preload_libraries = ''            # Default: '' (no extensions to save memory)

# Disable unnecessary features
huge_pages = off                         # Default: try → off (not available on Pi)
ssl = off                                # Default: on → off (not needed in Docker)

# =============================================================================
# CLIENT CONNECTION SETTINGS
# =============================================================================

# Default transaction isolation
default_transaction_isolation = 'read committed'  # Default (keep)

# Timezone
timezone = 'UTC'                         # Set to UTC for consistency
log_timezone = 'UTC'                     # Log timezone

# Locale settings (invariant for better performance)
lc_messages = 'C'                        # Default locale
lc_monetary = 'C'                        # Default locale
lc_numeric = 'C'                         # Default locale
lc_time = 'C'                           # Default locale

# Default text search configuration
default_text_search_config = 'pg_catalog.simple'  # Simple config to save memory

# =============================================================================
# RESOURCE CLEANUP SETTINGS
# =============================================================================

# Temporary file management
temp_file_limit = 100MB                  # Limit temporary files to 100MB

# Lock management
deadlock_timeout = 1s                    # Default: 1s (keep default)

# Statement timeout (prevent runaway queries)
statement_timeout = 30s                  # 30 second timeout for queries
idle_in_transaction_session_timeout = 60s  # Cleanup idle transactions

# =============================================================================
# MEMORY CALCULATION SUMMARY für Pi Zero 2 W:
# =============================================================================
# Component                     Before        After         Savings
# -----------------------------------------------------------------------------
# shared_buffers                128MB      →  16MB          -112MB
# effective_cache_size          128MB      →  64MB          -64MB  
# work_mem (20 connections)     80MB       →  40MB          -40MB
# maintenance_work_mem          64MB       →  8MB           -56MB
# wal_buffers                   16MB       →  4MB           -12MB
# Connection overhead (80 less) 160MB      →  0MB           -160MB
# -----------------------------------------------------------------------------
# TOTAL POSTGRESQL MEMORY       576MB      →  132MB         -444MB (-77%)
# Container Memory Limit        N/A        →  80MB          (strict limit)
# Effective Memory Usage        576MB      →  80MB          -496MB (-86%)
# 
# RESULT: PostgreSQL Memory-Footprint reduziert von 576MB auf 80MB
#         Das entspricht einer Reduktion von 86% - essentiell für Pi Zero 2 W!
# =============================================================================