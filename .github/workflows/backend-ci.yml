name: Backend CI

on:
  push:
    branches: [ main, develop, feat/* ]
    paths:
      - 'src/backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/backend/**'
      - '.github/workflows/backend-ci.yml'

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: booking_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      working-directory: src/backend
      run: dotnet restore
    
    - name: Build
      working-directory: src/backend
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      working-directory: src/backend
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=booking_test;Username=test_user;Password=test_password"
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: src/backend/coverage/**/*.cobertura.xml
        retention-days: 7

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src/backend
        push: false
        tags: booking-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max