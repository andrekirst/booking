name: Update Application Status

# Trigger: Nach jedem Push zu main oder Feature-Branches
on:
  push:
    branches: [ main, 'feat/**' ]
  pull_request:
    branches: [ main ]

jobs:
  update-status:
    name: Update Application Status Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        # Benötigt für Git-History-Analyse
        fetch-depth: 2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Make Scripts Executable
      run: |
        chmod +x scripts/*.sh

    - name: Run Application Analysis
      run: |
        echo "🔍 Analysiere Anwendungsstruktur..."
        ./scripts/analyze-application.sh
        
        echo "📊 Zusätzliche Analysen..."
        ./scripts/analyze-api-endpoints.sh > docs/API_ENDPOINTS.md || true
        ./scripts/analyze-frontend-components.sh > docs/FRONTEND_COMPONENTS.md || true

    - name: Check for Changes
      id: changes
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "(src/|scripts/)" > /dev/null; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "📝 Anwendungsänderungen erkannt"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️  Keine relevanten Änderungen"
        fi

    - name: Create Status Update Commit
      if: steps.changes.outputs.changes == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Füge Update-Metadaten hinzu
        echo "" >> APPLICATION_STATUS.md
        echo "---" >> APPLICATION_STATUS.md
        echo "" >> APPLICATION_STATUS.md
        echo "## 🤖 CI/CD Update" >> APPLICATION_STATUS.md
        echo "" >> APPLICATION_STATUS.md
        echo "- **Zeitpunkt:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> APPLICATION_STATUS.md
        echo "- **Trigger:** GitHub Action" >> APPLICATION_STATUS.md
        echo "- **Commit:** ${{ github.sha }}" >> APPLICATION_STATUS.md
        echo "- **Branch:** ${{ github.ref_name }}" >> APPLICATION_STATUS.md
        echo "- **Autor:** ${{ github.actor }}" >> APPLICATION_STATUS.md
        echo "" >> APPLICATION_STATUS.md
        
        # Commit nur wenn Änderungen vorhanden
        if ! git diff --quiet APPLICATION_STATUS.md; then
          git add APPLICATION_STATUS.md docs/ || true
          git commit -m "docs: update application status [skip ci]
          
          🤖 Automatisches Update des Anwendungsstatus
          
          - Branch: ${{ github.ref_name }}
          - Commit: ${{ github.sha }}
          - Trigger: GitHub Action
          
          📊 Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>" || true
          
          git push || true
        fi

    - name: Generate Status Summary
      if: github.event_name == 'pull_request'
      run: |
        echo "## 📊 Application Status Update" > status-summary.md
        echo "" >> status-summary.md
        echo "Automatisch generierter Anwendungsstatus für diesen PR:" >> status-summary.md
        echo "" >> status-summary.md
        
        # Statistiken sammeln
        COMPONENTS=$(find src/frontend -name "*.tsx" -not -path "*/__tests__/*" | wc -l)
        CONTROLLERS=$(find src/backend -name "*Controller.cs" | wc -l)
        ROUTES=$(find src/frontend/app -name "page.tsx" | wc -l)
        
        echo "### 📈 Aktuelle Statistiken" >> status-summary.md
        echo "" >> status-summary.md
        echo "- **Frontend-Komponenten:** $COMPONENTS" >> status-summary.md
        echo "- **API-Controller:** $CONTROLLERS" >> status-summary.md
        echo "- **Verfügbare Routen:** $ROUTES" >> status-summary.md
        echo "" >> status-summary.md
        echo "### 📄 Aktualisierte Dokumentation" >> status-summary.md
        echo "" >> status-summary.md
        echo "- [APPLICATION_STATUS.md](./APPLICATION_STATUS.md) - Vollständiger Anwendungsstatus" >> status-summary.md
        echo "- [API_ENDPOINTS.md](./docs/API_ENDPOINTS.md) - API-Dokumentation" >> status-summary.md
        echo "- [FRONTEND_COMPONENTS.md](./docs/FRONTEND_COMPONENTS.md) - Komponenten-Übersicht" >> status-summary.md

    - name: Comment PR with Status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('status-summary.md')) {
            const body = fs.readFileSync('status-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          }