# Site-specific Nginx Configuration for Booking System
# Production-ready virtual host with SSL, security, and performance optimizations

#################################################################################
# HTTP Server Block (Redirect to HTTPS)
#################################################################################
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name booking.yourdomain.com www.booking.yourdomain.com;
    
    # Security headers for HTTP
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
    
    # Health check endpoint (allows HTTP for monitoring)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

#################################################################################
# HTTPS Server Block (Main Application)
#################################################################################
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name booking.yourdomain.com www.booking.yourdomain.com;
    
    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/booking.crt;
    ssl_certificate_key /etc/nginx/ssl/booking.key;
    ssl_trusted_certificate /etc/nginx/ssl/booking-ca.crt;
    
    # Security headers for HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://apis.google.com; frame-src https://accounts.google.com;" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Document root for static files
    root /var/www/html;
    index index.html index.htm;
    
    #############################################################################
    # Static Asset Optimization
    #############################################################################
    
    # Next.js static assets with aggressive caching
    location /_next/static/ {
        alias /var/www/html/_next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Gzip compression for static assets
        gzip_static on;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
    }
    
    # Images and media files
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        expires 6M;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Optional image optimization (if tools available)
        # location ~* \.webp$ {
        #     add_header Vary Accept;
        # }
    }
    
    # CSS and JavaScript files
    location ~* \.(css|js|mjs)$ {
        expires 1M;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options nosniff;
        
        # Enable gzip for CSS/JS
        gzip_static on;
    }
    
    # Fonts
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header X-Content-Type-Options nosniff;
    }
    
    # Manifest and service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options nosniff;
    }
    
    #############################################################################
    # API Routes with Rate Limiting
    #############################################################################
    
    # Authentication endpoints (stricter rate limiting)
    location ~ ^/api/auth/(login|register|reset-password) {
        limit_req zone=login burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://booking_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for auth endpoints
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # General API endpoints
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        limit_req_status 429;
        
        proxy_pass http://booking_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API response caching (5 minutes for GET requests)
        proxy_cache static;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Timeouts optimized for Pi Zero
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://booking_backend/health;
        proxy_set_header Host $host;
        
        # Fast timeouts for health checks
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    #############################################################################
    # Next.js Frontend Application
    #############################################################################
    
    # Try files for Next.js static export
    location / {
        limit_req zone=general burst=20 nodelay;
        
        try_files $uri $uri.html $uri/ @nextjs;
        
        # Cache HTML files for 1 hour
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Content-Type-Options nosniff;
        }
    }
    
    # Fallback to backend for dynamic routes
    location @nextjs {
        proxy_pass http://booking_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for dynamic content
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    #############################################################################
    # Security and Maintenance
    #############################################################################
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to backup and config files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to version control
    location ~ /\.(git|svn|hg) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security.txt for responsible disclosure
    location /.well-known/security.txt {
        return 200 "Contact: security@yourdomain.com\nPreferred-Languages: en, de\nExpires: 2025-12-31T23:59:59.000Z\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\nAllow: /\n";
        add_header Content-Type text/plain;
    }
    
    #############################################################################
    # Error Pages
    #############################################################################
    
    # Custom error pages
    error_page 400 401 403 404 /error.html;
    error_page 500 502 503 504 /error.html;
    
    location = /error.html {
        root /var/www/html;
        internal;
    }
    
    # Rate limit error page
    error_page 429 /rate-limit.html;
    location = /rate-limit.html {
        root /var/www/html;
        internal;
    }
}

#################################################################################
# Configuration Features Summary:
#################################################################################
# 1. SSL/TLS Security:
#    - HTTPS-only with HSTS
#    - Modern SSL configuration
#    - Perfect Forward Secrecy
#    - OCSP stapling
#
# 2. Performance Optimizations:
#    - Aggressive static asset caching
#    - Gzip compression
#    - HTTP/2 support
#    - API response caching (5min)
#
# 3. Security Features:
#    - Comprehensive CSP policy
#    - Rate limiting by endpoint type
#    - Security headers
#    - Sensitive file blocking
#
# 4. ARM64/Pi Zero Optimizations:
#    - Reduced timeouts and buffers
#    - Memory-efficient caching
#    - Optimized worker configuration
#    - Health check monitoring
#################################################################################