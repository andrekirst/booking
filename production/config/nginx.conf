# High-Performance Nginx Configuration for Raspberry Pi Zero 2 W
# Optimized for ARM64 Cortex-A53 with 512MB RAM constraint
# Target: <30MB memory usage, SSL A+ rating, 10-50 concurrent users

# Main configuration optimized for single-core ARM64
user nginx;
worker_processes 1;  # Single core optimization for Pi Zero
worker_rlimit_nofile 1024;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# ARM64-optimized worker connections
events {
    worker_connections 256;  # Reduced for Pi Zero memory constraints
    use epoll;              # Efficient on ARM64 Linux
    multi_accept on;        # Accept multiple connections
    accept_mutex off;       # Disable for single worker
}

http {
    #############################################################################
    # MIME Types and Character Encoding
    #############################################################################
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    #############################################################################
    # Logging Configuration (Minimized for Storage)
    #############################################################################
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main buffer=16k flush=5m;
    error_log /var/log/nginx/error.log warn;

    #############################################################################
    # Performance Optimizations for ARM64
    #############################################################################
    sendfile on;                    # Efficient file serving on ARM64
    tcp_nopush on;                 # Combine packets
    tcp_nodelay on;                # Don't buffer small packets
    keepalive_timeout 30;          # Reduced for memory efficiency
    keepalive_requests 100;        # Limit requests per connection
    reset_timedout_connection on;  # Free memory from timed out connections
    
    # Buffer sizes optimized for Pi Zero memory constraints
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    client_max_body_size 10m;      # Reasonable for booking uploads
    large_client_header_buffers 2 1k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    #############################################################################
    # Compression for Bandwidth Efficiency
    #############################################################################
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;             # Balanced compression for ARM64
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    #############################################################################
    # Security Headers (Production-Ready)
    #############################################################################
    # Hide nginx version
    server_tokens off;
    
    # Security headers (applied globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    #############################################################################
    # Rate Limiting for DDoS Protection
    #############################################################################
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/m;      # API endpoints
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;     # Login attempts
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m; # General requests
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn perip 10;

    #############################################################################
    # SSL Configuration (A+ Rating)
    #############################################################################
    # SSL session optimization
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;
    
    # Modern SSL configuration for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # DNS resolver for OCSP
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    #############################################################################
    # Caching for Static Assets
    #############################################################################
    # Define cache path for ARM64 optimization
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static:10m 
                     max_size=100m inactive=60m use_temp_path=off;
    
    # Proxy settings for backend communication
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Proxy timeouts optimized for Pi Zero
    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    #############################################################################
    # Upstream Backend Servers with Health Checks
    #############################################################################
    upstream booking_backend {
        server backend:80 max_fails=3 fail_timeout=30s;
        keepalive 2;  # Limited for Pi Zero memory
    }

    #############################################################################
    # Include Site-Specific Configurations
    #############################################################################
    include /etc/nginx/conf.d/*.conf;
}

#################################################################################
# Configuration Summary for Raspberry Pi Zero 2 W:
#################################################################################
# 1. Memory Optimizations:
#    - Single worker process (matches single core)
#    - Reduced buffer sizes (16k client body, 1k headers)
#    - Limited worker connections (256 vs 1024 standard)
#    - Shared SSL session cache (10MB)
#
# 2. Performance Features:
#    - Sendfile enabled for efficient ARM64 file serving
#    - Gzip compression with balanced level 6
#    - HTTP/2 support for multiplexing
#    - Efficient epoll event system
#
# 3. Security Features:
#    - TLS 1.2/1.3 only with modern ciphers
#    - OCSP stapling enabled
#    - Comprehensive security headers
#    - Rate limiting for DDoS protection
#
# 4. ARM64 Specific Optimizations:
#    - Single core configuration
#    - Reduced memory buffers
#    - Efficient connection handling
#    - Optimized for Cortex-A53 architecture
#################################################################################