# Fail2ban Configuration für Booking System auf Raspberry Pi Zero 2 W
# Optimiert für ARM64 Performance und minimalen Ressourcenverbrauch

# =============================================================================
# DEFAULT SETTINGS
# =============================================================================
[DEFAULT]
# Basis-Einstellungen für Pi Zero 2 W
bantime = 3600      # 1 Stunde Ban (weniger aggressiv für SBC)
findtime = 600      # 10 Minuten Zeitfenster
maxretry = 5        # 5 Versuche erlaubt
backend = systemd   # Systemd Journal als Backend (effizient auf ARM)

# Email-Benachrichtigung (optional)
destemail = admin@yourdomain.com
sender = fail2ban@yourdomain.com
mta = sendmail

# Action: iptables-multiport für bessere Performance
action = %(action_mw)s

# =============================================================================
# SSH PROTECTION
# =============================================================================
[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
bantime = 7200      # 2 Stunden für SSH (kritischer Service)
findtime = 600

# =============================================================================
# NGINX PROTECTION - HTTP/HTTPS Attacks
# =============================================================================
[nginx-http-auth]
enabled = true
filter = nginx-http-auth
logpath = /var/lib/booking/logs/nginx/error.log
maxretry = 3
bantime = 1800      # 30 Minuten
findtime = 300

[nginx-noscript]
enabled = true  
filter = nginx-noscript
logpath = /var/lib/booking/logs/nginx/access.log
maxretry = 6
bantime = 3600

[nginx-badbots]
enabled = true
filter = nginx-badbots
logpath = /var/lib/booking/logs/nginx/access.log  
maxretry = 2
bantime = 86400     # 24 Stunden für Bots

[nginx-noproxy]
enabled = true
filter = nginx-noproxy
logpath = /var/lib/booking/logs/nginx/access.log
maxretry = 2
bantime = 3600

# =============================================================================
# BOOKING SYSTEM SPECIFIC PROTECTION
# =============================================================================
[booking-api-auth]
enabled = true
filter = booking-api-auth
logpath = /var/lib/booking/logs/backend/application.log
port = http,https
maxretry = 5
bantime = 1800
findtime = 300
# Spezielle Action für API-Schutz
action = iptables-multiport[name=booking-api, port="http,https", protocol=tcp]
         sendmail-whois[name=booking-api, dest=admin@yourdomain.com]

[booking-bruteforce]
enabled = true
filter = booking-bruteforce  
logpath = /var/lib/booking/logs/backend/application.log
port = http,https
maxretry = 10
bantime = 3600
findtime = 600

[booking-dos]
enabled = true
filter = booking-dos
logpath = /var/lib/booking/logs/nginx/access.log
port = http,https
maxretry = 30
bantime = 600       # Kurzer Ban für DoS (könnte false positive sein)
findtime = 60

# =============================================================================
# POSTGRESQL PROTECTION  
# =============================================================================
[postgresql]
enabled = true
filter = postgresql
logpath = /var/lib/booking/logs/postgresql/postgresql.log
port = 5432
maxretry = 3
bantime = 7200      # 2 Stunden für DB-Attacks
findtime = 300

# =============================================================================
# CUSTOM ACTIONS für Pi Zero Performance
# =============================================================================
[booking-rate-limit]
enabled = true
filter = booking-rate-limit
logpath = /var/lib/booking/logs/nginx/access.log
port = http,https
maxretry = 50       # Rate Limiting: 50 Requests zu schnell
bantime = 300       # Kurze Sperre für Rate Limits
findtime = 60
# Leichtere Action für Rate Limiting
action = iptables[name=booking-rate, port=http, protocol=tcp]

# =============================================================================
# MONITORING UND ALERTING
# =============================================================================
[booking-monitoring]
enabled = true
filter = booking-monitoring
logpath = /var/lib/booking/logs/backend/application.log
# Nur Benachrichtigung, kein Ban
action = sendmail[name=booking-monitoring, dest=admin@yourdomain.com]
maxretry = 1
bantime = 0         # Kein Ban, nur Monitoring
findtime = 60